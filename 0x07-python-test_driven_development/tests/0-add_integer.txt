The ``0-add integer`` module

============================



Using ``Addition of two integers or floats``

-----------------------------------



	>>> add_integer = __import__('0-add_integer').add_integer



Validate cases:



	 >>> add_integer(1,2)

	 3

	 >>> add_integer(100,-2)

	 98

	 >>> add_integer(2)

	 100

	 >>> add_integer(100.3, -2)

	 98

	 >>> add_integer(4,"School")

	 Traceback (most recent call last):

	 ...

	 TypeError: b must be an integer

	 >>> print(add_integer(None))

	 Traceback (most recent call last):

	 ...

	 TypeError: a must be an integer

	 >>> add_integer(5j)

	 Traceback (most recent call last):

	 ...

	 TypeError: a must be an integer

	 >>> add_integer(2, 2 + 5j)

	 Traceback (most recent call last):

  	 ...

	 TypeError: b must be an integer

	 >>> add_integer(True, False)

	 Traceback (most recent call last):

  	 ...

	 TypeError: a must be an integer

	 >>> add_integer([1,2])

	 Traceback (most recent call last):

  	 ...

	 TypeError: a must be an integer

	 >>> add_integer((1,2))

	 Traceback (most recent call last):

  	 ...

	 TypeError: a must be an integer

	 >>> add_integer({"Num":2})

	 Traceback (most recent call last):

 	 ...

	 TypeError: a must be an integer

	 >>> add_integer(0x16)

	 120

	 >>> add_integer(65e0)

	 163

	 >>> add_integer('num')

	 Traceback (most recent call last):

  	 ...

	 TypeError: a must be an integer

	 >>> add_integer('num\'')

	 Traceback (most recent call last):

  	 ...

	 TypeError: a must be an integer

	 >>> add_integer('num\

	 ... q')

	 Traceback (most recent call last):

  	 ...

	 TypeError: a must be an integer
